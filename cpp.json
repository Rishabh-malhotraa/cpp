{
  "cpprint": {
    "prefix": "arrprint",
    "body": [
      "void print(int n, vector<int> arr)",
      "{",
      "\tfor (int i = 0; i < n; i++)",
      "\t{",
      "\t\tcout << i << \" -> \" << arr[i] << endl;",
      "\t}",
      "}"
    ],
    "description": "Print elements of an array template"
  },
  "cpstr": {
    "prefix": "cpcf",
    "body": [
      "#include <bits/stdc++.h>",
      "#include <string>",
      "using namespace std;",
      "#define ll long long",
      "#define MOD 1000000007LL",
      "#define LL long long",
      "#define ULL unsigned long long",
      "#define pb push_back",
      "#define mp make_pair",
      "#define F first",
      "#define S second",
      "#define MOD 1000000007",
      "#define pnl cout << endl",
      "#define MAX(a, b) ((a) > (b) ? (a) : (b))",
      "#define MIN(a, b) ((a) < (b) ? (a) : (b))",
      "#define ABS(x) ((x) < 0 ? -(x) : (x))",
      "#define FO(i, n) for (int i = 0; i < (n); i++)",
      "#define FORR(i, n) for (int i = (n); i >= 0; i--)",
      "#define FO(i, a, b) for (int i = (a); i < (b); i++)\n",
      "int main()",
      "{",
      "#ifndef ONLINE_JUDGE",
      "\t// for getting input from input.txt",
      "\tfreopen(\"input.txt\", \"r\", stdin);",
      "\t// for writing output to output.txt",
      "\tfreopen(\"output.txt\", \"w\", stdout);",
      "#endif\n\t",
      "\tint t;",
      "\tcin >> t;",
      "\twhile (t--)",
      "\t{",
      "\t\t$1",
      "\t}",
      "\treturn 0;",
      "}"
    ],
    "description": "Started Template for CP"
  }
  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
}
